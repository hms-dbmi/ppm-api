version: '2.1'
services:
  api-db:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_DATABASES=kong,konga
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 15s
      timeout: 5s
      retries: 15

  api:
    build: ./
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=api-db
      - KONG_PG_DATABASE=kong
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:9100, 0.0.0.0:9099 ssl
      - KONG_ADMIN_LISTEN=0.0.0.0:9101, 0.0.0.0:9102 ssl
    restart: always
    ports:
      - "9099:9099"
      - "9100:9100"
      - "9101:9101"
      - "9102:9102"
    healthcheck:
      test: ["CMD-SHELL", "curl -I -s -L http://0.0.0.0:8888 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
    depends_on:
      api-db:
        condition: service_healthy

  api-ui:
    image: pantsel/konga
    ports:
      - "9103:9103"
    environment:
      - PORT=9103
      - DB_ADAPTER=postgres
      - DB_HOST=api-db
      - DB_PORT=5432
      - DB_DATABASE=konga
      - DB_USER=konga
      - DB_PASSWORD=konga
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9103/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
    depends_on:
      api:
        condition: service_healthy
      
volumes:
  db-data: